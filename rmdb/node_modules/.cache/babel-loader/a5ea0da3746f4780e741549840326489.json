{"ast":null,"code":"var _jsxFileName = \"/Users/chrisjackson/Desktop/Udemy React/React RMDB - Starter files_rev8 - NEW RESPONSIVE STYLE/React RMDB - Start Here/src/components/Home/Home.js\";\nimport React, { Component } from 'react';\nimport { API_URL, API_KEY, IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE } from '../../config';\nimport HeroImage from '../elements/HeroImage/HeroImage';\nimport SearchBar from '../elements/SearchBar/Searchbar';\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\nimport MovieThumb from '../elements/MovieThumb/MovieThumb';\nimport LoadMoreBtn from '../elements/LoadMoreBtn/LoadMoreBtn';\nimport Spinner from '../elements/Spinner/Spinner';\nimport './Home.css';\n\nclass Home extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movies: [],\n      heroImage: null,\n      loading: false,\n      currentPage: 0,\n      totalPages: 0,\n      searchTerm: ''\n    };\n\n    this.searchItems = searchTerm => {\n      let endpoint = '';\n      this.setState({\n        movies: [],\n        loading: true,\n        searchTerm: searchTerm\n      });\n\n      if (searchTerm === '') {\n        endpoint = \"\".concat(API_URL, \"movie/popular?api_key=\").concat(API_KEY, \"&language=en-us&page=1\");\n      } else {\n        endpoint = \"\".concat(API_URL, \"search/movie?api_key=\").concat(API_KEY, \"&language=en-US&quesry=\").concat(searchTerm);\n      }\n\n      this.fetchItems(endpoint);\n    };\n\n    this.loadMoreItems = () => {\n      let endpoint = '';\n      this.setState({\n        loading: true\n      });\n\n      if (this.state.searchTerm === '') {\n        endpoint = \"\".concat(API_URL, \"movie/popular?api_key=\").concat(API_KEY, \"&language=en-us&page=\").concat(this.state.currentPage + 1);\n      } else {\n        endpoint = \"\".concat(API_URL, \"search/movie?api_key=\").concat(API_KEY, \"&language=en-us&query\").concat(this.state.searchTerm, \"&page=\").concat(this.state.currentPage + 1);\n      }\n\n      this.fetchItems(endpoint);\n    };\n\n    this.fetchItems = endpoint => {\n      fetch(endpoint).then(result => result.json()).then(result => {\n        this.setState({\n          movies: [...this.state.movies, ...result.results],\n          heroImage: this.state.heroImage || result.results[0],\n          loading: false,\n          currentPage: result.page,\n          totalPages: result.total_pages\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      loading: true\n    });\n    const endpoint = \"\".concat(API_URL, \"movie/popular?api_key=\").concat(API_KEY, \"&language=en-us&page=1\");\n    this.fetchItems(endpoint);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"rmdb-home\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, this.state.heroImage ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(HeroImage, {\n      image: \"\".concat(IMAGE_BASE_URL).concat(BACKDROP_SIZE).concat(this.state.heroImage.backdrop_path),\n      title: this.state.heroImage.original_title,\n      text: this.state.heroImage.overview,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(SearchBar, {\n      callback: this.searchItems,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })) : null, React.createElement(\"div\", {\n      className: \"rmdb-home-grid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(FourColGrid, {\n      header: this.state.searchTerm ? 'Search Result' : 'Popular Movies',\n      loading: this.state.loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, this.state.movies.map((element, i) => {\n      return React.createElement(MovieThumb, {\n        key: i,\n        clickable: true,\n        image: element.poster_path ? \"\".concat(IMAGE_BASE_URL).concat(POSTER_SIZE).concat(element.poster_path) : './images/no_image.jpg',\n        movieId: element.id,\n        movieName: element.original_title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      });\n    })), this.state.loading ? React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }) : null), React.createElement(LoadMoreBtn, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/chrisjackson/Desktop/Udemy React/React RMDB - Starter files_rev8 - NEW RESPONSIVE STYLE/React RMDB - Start Here/src/components/Home/Home.js"],"names":["React","Component","API_URL","API_KEY","IMAGE_BASE_URL","POSTER_SIZE","BACKDROP_SIZE","HeroImage","SearchBar","FourColGrid","MovieThumb","LoadMoreBtn","Spinner","Home","state","movies","heroImage","loading","currentPage","totalPages","searchTerm","searchItems","endpoint","setState","fetchItems","loadMoreItems","fetch","then","result","json","results","page","total_pages","componentDidMount","render","backdrop_path","original_title","overview","map","element","i","poster_path","id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { API_URL, API_KEY, IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE } from '../../config';\nimport HeroImage from '../elements/HeroImage/HeroImage';\nimport SearchBar from '../elements/SearchBar/Searchbar';\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\nimport MovieThumb from '../elements/MovieThumb/MovieThumb';\nimport LoadMoreBtn from '../elements/LoadMoreBtn/LoadMoreBtn';\nimport Spinner from '../elements/Spinner/Spinner';\nimport './Home.css';\n\nclass Home extends Component {\n    state = {\n        movies: [],\n        heroImage: null,\n        loading: false,\n        currentPage: 0,\n        totalPages: 0,\n        searchTerm: ''\n    }\n\n    componentDidMount() {\n        this.setState({ loading: true });\n        const endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-us&page=1`;\n        this.fetchItems(endpoint);\n    }\n\n    searchItems = (searchTerm) => {\n        let endpoint = '';\n        this.setState({\n            movies: [],\n            loading: true,\n            searchTerm: searchTerm\n        })\n\n        if (searchTerm === '') {\n            endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-us&page=1`;\n        } else {\n            endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&quesry=${searchTerm}`;\n        }\n        this.fetchItems(endpoint);\n    }\n\n    loadMoreItems = () => {\n        let endpoint = '';\n        this.setState({ loading: true });\n\n        if (this.state.searchTerm === '') {\n            endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-us&page=${this.state.currentPage + 1}`;\n        } else {\n            endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-us&query${this.state.searchTerm}&page=${this.state.currentPage + 1}`;\n        }\n        this.fetchItems(endpoint);\n    }\n\n    fetchItems = (endpoint) => {\n        fetch(endpoint)\n        .then(result => result.json())\n        .then(result => {\n            this.setState({\n                movies: [...this.state.movies, ...result.results],\n                heroImage: this.state.heroImage || result.results[0],\n                loading: false,\n                currentPage: result.page,\n                totalPages: result.total_pages\n            })\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"rmdb-home\">\n                {this.state.heroImage ? \n                    <div>\n                    <HeroImage\n                        image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${this.state.heroImage.backdrop_path}`}\n                        title={this.state.heroImage.original_title}\n                        text={this.state.heroImage.overview} />\n                    <SearchBar callback={this.searchItems} />\n                    </div> : null }\n                <div className=\"rmdb-home-grid\">\n                    <FourColGrid \n                        header={this.state.searchTerm ? 'Search Result' : 'Popular Movies'}\n                        loading={this.state.loading}>\n                            {this.state.movies.map((element, i) => {\n                                return <MovieThumb\n                                            key={i}\n                                            clickable={true}\n                                            image={element.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${element.poster_path}` : './images/no_image.jpg'}\n                                            movieId={element.id}\n                                            movieName={element.original_title}\n                                        />\n                            })}\n                    </FourColGrid>\n                    {this.state.loading ? <Spinner /> : null}\n                </div>\n                <LoadMoreBtn />\n            </div>\n        )\n    }\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}