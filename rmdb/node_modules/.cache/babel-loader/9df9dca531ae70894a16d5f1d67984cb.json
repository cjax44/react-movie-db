{"ast":null,"code":"var _jsxFileName = \"/Users/chrisjackson/Desktop/Udemy React/React RMDB - Starter files_rev8 - NEW RESPONSIVE STYLE/React RMDB - Start Here/src/components/Movie/Movie.js\";\nimport React, { Component } from 'react';\nimport { API_URL, API_KEY } from '../../config';\nimport Navigation from '../elements/Navigation/Navigation';\nimport MovieInfo from '../elements/MovieInfo/MovieInfo';\nimport MovieInfoBar from '../elements/MovieInfoBar/MovieInfoBar';\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\nimport Actor from '../elements/Actor/Actor';\nimport Spinner from '../elements/Spinner/Spinner';\nimport './Movie.css';\n\nclass Movie extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movie: null,\n      actors: null,\n      directors: [],\n      loading: false\n    };\n\n    this.fetchItems = endpoint => {\n      fetch(endpoint).then(result => result.json()).then(result => {\n        if (result.status_code) {\n          this.setState({\n            loading: false\n          });\n        } else {\n          this.setState({\n            movie: result\n          }, () => {\n            // fetch actors in the setState callback function\n            const endpoint = \"\".concat(API_URL, \"movie/\").concat(this.props.match.params.movieId, \"/credits?api_key=\").concat(API_KEY);\n            fetch(endpoint).then(result => result.json()).then(result => {\n              const directors = result.crew.filter(member => member.job === \"Director\");\n              this.setState({\n                actors: result.cast,\n                directors: directors,\n                loading: false\n              });\n            });\n          });\n        }\n      }).catch(error => console.error('Error:', error));\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      loading: true\n    }); // first fetch the movie\n\n    const endpoint = \"\".concat(API_URL, \"movie/\").concat(this.props.match.params.movieId, \"?api_key=\").concat(API_KEY, \"&language=en-US\");\n    this.fetchItems(endpoint);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"rmdb-movie'\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Navigation, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(MovieInfo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(MovieInfoBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(FourColGrid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Movie;","map":{"version":3,"sources":["/Users/chrisjackson/Desktop/Udemy React/React RMDB - Starter files_rev8 - NEW RESPONSIVE STYLE/React RMDB - Start Here/src/components/Movie/Movie.js"],"names":["React","Component","API_URL","API_KEY","Navigation","MovieInfo","MovieInfoBar","FourColGrid","Actor","Spinner","Movie","state","movie","actors","directors","loading","fetchItems","endpoint","fetch","then","result","json","status_code","setState","props","match","params","movieId","crew","filter","member","job","cast","catch","error","console","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,cAAjC;AACA,OAAOC,UAAP,MAAuB,mCAAvB;AACA,OAAOC,SAAP,MAAsB,iCAAtB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,OAAOC,WAAP,MAAwB,qCAAxB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAO,aAAP;;AAEA,MAAMC,KAAN,SAAoBT,SAApB,CAA8B;AAAA;AAAA;AAAA,SAE1BU,KAF0B,GAElB;AACJC,MAAAA,KAAK,EAAE,IADH;AAEJC,MAAAA,MAAM,EAAE,IAFJ;AAGJC,MAAAA,SAAS,EAAE,EAHP;AAIJC,MAAAA,OAAO,EAAE;AAJL,KAFkB;;AAAA,SAgB1BC,UAhB0B,GAgBZC,QAAD,IAAc;AACvBC,MAAAA,KAAK,CAACD,QAAD,CAAL,CACCE,IADD,CACMC,MAAM,IAAIA,MAAM,CAACC,IAAP,EADhB,EAECF,IAFD,CAEMC,MAAM,IAAI;AAEZ,YAAIA,MAAM,CAACE,WAAX,EAAwB;AACpB,eAAKC,QAAL,CAAc;AAAER,YAAAA,OAAO,EAAE;AAAX,WAAd;AACH,SAFD,MAEO;AACH,eAAKQ,QAAL,CAAc;AAAEX,YAAAA,KAAK,EAAEQ;AAAT,WAAd,EAAiC,MAAM;AACnC;AACA,kBAAMH,QAAQ,aAAMf,OAAN,mBAAsB,KAAKsB,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,OAA9C,8BAAyExB,OAAzE,CAAd;AACAe,YAAAA,KAAK,CAACD,QAAD,CAAL,CACCE,IADD,CACMC,MAAM,IAAIA,MAAM,CAACC,IAAP,EADhB,EAECF,IAFD,CAEMC,MAAM,IAAI;AACZ,oBAAMN,SAAS,GAAGM,MAAM,CAACQ,IAAP,CAAYC,MAAZ,CAAoBC,MAAD,IAAYA,MAAM,CAACC,GAAP,KAAe,UAA9C,CAAlB;AAEA,mBAAKR,QAAL,CAAc;AACVV,gBAAAA,MAAM,EAAEO,MAAM,CAACY,IADL;AAEVlB,gBAAAA,SAAS,EAAEA,SAFD;AAGVC,gBAAAA,OAAO,EAAE;AAHC,eAAd;AAKH,aAVD;AAYH,WAfD;AAgBH;AAEJ,OAzBD,EA0BCkB,KA1BD,CA0BOC,KAAK,IAAIC,OAAO,CAACD,KAAR,CAAc,QAAd,EAAwBA,KAAxB,CA1BhB;AA2BH,KA5CyB;AAAA;;AAS1BE,EAAAA,iBAAiB,GAAG;AAChB,SAAKb,QAAL,CAAc;AAAER,MAAAA,OAAO,EAAE;AAAX,KAAd,EADgB,CAEhB;;AACA,UAAME,QAAQ,aAAMf,OAAN,mBAAsB,KAAKsB,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,OAA9C,sBAAiExB,OAAjE,oBAAd;AACA,SAAKa,UAAL,CAAgBC,QAAhB;AACH;;AAgCDoB,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,EAII,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EAKI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CADJ;AASH;;AAxDyB;;AA2D9B,eAAe3B,KAAf","sourcesContent":["import React, { Component } from 'react';\nimport { API_URL, API_KEY } from '../../config';\nimport Navigation from '../elements/Navigation/Navigation';\nimport MovieInfo from '../elements/MovieInfo/MovieInfo';\nimport MovieInfoBar from '../elements/MovieInfoBar/MovieInfoBar';\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\nimport Actor from '../elements/Actor/Actor';\nimport Spinner from '../elements/Spinner/Spinner';\nimport './Movie.css'\n\nclass Movie extends Component {\n\n    state = {\n        movie: null,\n        actors: null,\n        directors: [],\n        loading: false\n    }\n\n    componentDidMount() {\n        this.setState({ loading: true })\n        // first fetch the movie\n        const endpoint = `${API_URL}movie/${this.props.match.params.movieId}?api_key=${API_KEY}&language=en-US`;\n        this.fetchItems(endpoint);\n    }\n\n    fetchItems = (endpoint) => {\n        fetch(endpoint)\n        .then(result => result.json())\n        .then(result => {\n\n            if (result.status_code) {\n                this.setState({ loading: false });\n            } else {\n                this.setState({ movie: result }, () => {\n                    // fetch actors in the setState callback function\n                    const endpoint = `${API_URL}movie/${this.props.match.params.movieId}/credits?api_key=${API_KEY}`\n                    fetch(endpoint)\n                    .then(result => result.json())\n                    .then(result => {\n                        const directors = result.crew.filter((member) => member.job === \"Director\");\n\n                        this.setState({\n                            actors: result.cast,\n                            directors: directors,\n                            loading: false\n                        })\n                    })\n                    \n                });\n            }\n\n        })\n        .catch(error => console.error('Error:', error))\n    }\n\n    render() {\n        return (\n            <div className=\"rmdb-movie'\">\n                <Navigation />\n                <MovieInfo />\n                <MovieInfoBar />\n                <FourColGrid />\n                <Spinner />\n            </div>\n        )\n    }\n}\n\nexport default Movie;"]},"metadata":{},"sourceType":"module"}